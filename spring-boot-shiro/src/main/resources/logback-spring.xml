<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--
       以前的log4j:
       1.root:根
       2.Appender:何种形式?控制台?时间文件?尺寸文件
       3.Layout:日志记录格式
     -->

    <!--彩色输出-->
    <substitutionProperty name="log.pattern" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(---){faint} %clr(%-80.80logger{79}){cyan} %clr(:){faint} %m%n%wEx"/>
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--日志存放路径-->
    <property name="log.path" value="/home"/>
    <!--日志输出格式-->
    <property name="log.pattern2" value="%d{yyyy-MM-dd HH：mm：ss.SSS}  [%thread] %-5level --- %logger{50} : [%method,%line] - %msg%n"/>
    <!--控制台输出-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--输出格式-->
        <encoder calss="ch.qos.logback.classic.PatternLayout">
            <pattern>${log.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!--按时间记录日志:info-->
    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件名称-->
        <file>${log.path}/system-info.log</file>
        <!--设置以时间记录-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--修改日志文件名: 文件名+时间,%i:i为变量-->
            <fileNamePattern>${log.path}/system-info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文件最大保存期限:3天-->
            <maxHistory>15</maxHistory>
            <!--限制日志文件的大小:最大5MB-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--指定格式输出-->
        <encoder>
            <pattern>${log.pattern2}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!--按时间记录日志:error-->
    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件名称-->
        <file>${log.path}/system-error.log</file>
        <!--设置以时间记录-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--修改日志文件名: 文件名+时间,%i:i为变量-->
            <fileNamePattern>${log.path}/system-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文件最大保存期限:3天-->
            <maxHistory>15</maxHistory>
            <!--限制日志文件的大小:最大5MB-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--指定格式输出-->
        <encoder>
            <pattern>${log.pattern2}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!-- 系统模块日志级别控制  -->
    <logger name="com.xlx.shiro" level="info" />
    <!-- Spring日志级别控制  -->
    <logger name="org.springframework" level="warn" additivity="false"/>



    <root lever="info">
        <appender-ref ref="STDOUT"/>
    </root>

    <root lever="info">
        <appender-ref ref="file_info"/>
        <appender-ref ref="file_error"/>
    </root>

</configuration>


